/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SteppingStones; 

import java.util.Scanner;

public class SteppingStone2_IngredientCalculator {
    private String nameOfIngredient; 
    private float numberCups; 
    private int numberCaloriesPerCup;
    private double totalCalories;
    
    /** get the nameOfIngredient **/
    public String getNameOfIngredient() {
        return nameOfIngredient;
    }
    
    /**set parameter nameOfIngredient **/
    public void setNameOfIngredient (String nameOfIngredient) {
        this.nameOfIngredient = nameOfIngredient; {
    }
     /** return the numberCups **/
     public float getNumberCups() {
         return numberCups;
     }
     
     /**parameter numberCups to set **/
     public void setNumberCups(float numberCups) {
         this.numberCups = numberCups;
     }
     
     /** return numberCaloriesPerCup **/
     public int getNumberCaloriesPerCup() {
         return numberCaloriesPerCup;
     }
     /** parameter numberCaloriesPerCup set numberCaloriesPerCup **/
     public void setNumberCaloriesPerCup(int numberCaloriesPerCup) {
         this.numberCaloriesPerCup = numberCaloriesPerCup;
     }
     /** return the total number of calories**/
     public double getTotalCalories() {
         return totalCalories;
     }
     /** parameter totalCalories to set to totalCalories**/
     public void setTotalCalories(double totalCalories) {
         this.totalCalories = totalCalories;
     }
    
     public SteppingStone2_Ingredient() {
         this.nameOfIngredient = "";
         this.numberCups = 0;
         this.numberCaloriesPerCup = 0;
         this.totalCalories= 0.0;
     }
     public SteppingStone2_Ingredient(String nameOfIngredient, float numberCups, 
             int numberCaloriesPerCup, double totalCalories) {
             this.nameOfIngredient= nameOfIngredient; 
             this.numberCups = numberCups;
             this.numberCaloriesPerCup = numberCaloriesPerCup;
             this.totalCalories = totalCalories;
     }
     public SteppingStone2_IngredientCalculator addIngredient(String tempNameofIngredient) {
         tempNameOfIngredient = tempNameOfIngredient;
         float tempNumberCaloriesPerCup;
         double tempTotalCalories;
         Scanner scnr = new Scanner(System.in);
         
         System.out.println("Please enter the name of the ingredient");
         tempNameOfIngredient = scnr.next();
        
         System.out.println("Please Enter the Number of Cups of " + nameOfIngredient + "we'll need: ");
         tempNumberCups = scnr.nextFloat();
         
         System.out.println("Please enter the name of the calories per cup: ");
         tempNumberCaloriesPerCup = scnr.nextInt();
         
         tempTotalCalories = numberCups + numberCaloriesPerCup; 
         
         SteppingStone2_Ingredient tempNewIngredient = new SteepingStone2_Ingredient(tempNameOfIngredient, 
         tempNumberCups, tempNumberCaloriesPerCup, tempTotalCalories);
         
         return tempNewIngredient;  
     }
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SteppingStones;

import java.util.Scanner;
import java.util.ArrayList; 


public class SteppingStone3_Branches {

    /**
     * create new class*
     */
    /**
     * create menu to update recipe information*
     */
    
    public static void main(String[] args) {
       int numberCups = -1;
       int MAX_CUPS = 100; 
  
       Scanner scnr = new Scanner(System.in);
       
       System.out.println("Please enter the number of cups (between 1 and 100): ");
       
      if (scnr.hasNextInt()) {
           numberCups = scnr.nextInt();
           if (numberCups >= 1 && numberCups <= MAX_CUPS) {
               System.out.println(numberCups + " is a valid number of cups!");
           } else { 
               System.out.println(numberCups + " is not a valid number of cups.");
               System.out.println("Please enter another number of cups between"
                       + "1 and 100: ");
               numberCups =scnr.nextInt();
               if (numberCups >= 1 && numberCups <= MAX_CUPS) {
                   System.out.println(numberCups + " is a valid number of cups.");
               } else if (numberCups < 1) {
                   System.out.println(numberCups + " is less than 1. Sorry "
                           + "you are out of tries.");
               } else {
                   System.out.println(numberCups + " is larger than 100."
                           + " Sorry you are out of tries.");
               } 
           }
           } else { 
          System.out.println("Error: That is not a number. Try again.");
      }
       
       }
    }
/**create new public class**/

public class SteppingStone4_Loops {
    
    public static void main (String[] args) {
        Scanner scnr = new Scanner(System.in);
        String recipeName = "";
        ArrayList <String> ingredientList = new ArrayList();
        String newIngredient = "";
        boolean addMoreIngredients = true;
        
        System.out.println("Please enter the recipe name: ");
        recipeName = scnr.nextLine();
        
        do {
            System.out.println("Would you like to enter an ingredient?");
            
            String reply = scnr.next().toLowerCase();
            if (reply.equals("y")) {
                System.out.println("What is the ingredient?");
                newIngredient = scnr.next();
                ingredientList.add(newIngredient);
            
            } else if (!reply.equals("n")) {
                System.out.println("Please enter y or no");
            } else {
                addMoreIngredients = false;
            }
        } while (addMoreIngredients);
        
        for (int i = 0; i < ingredientList.size(); i++) {
            System.out.println(ingredientList.get(i));
        }   
    }
}
/**create a new public class**/

public class SteppingStones5_Recipe {
    
    private String recipeName;
    private int servings;
    private ArrayList<String> recipeIngredients;
    private double totalRecipeCalories;
    
    /**return the recipe name **/
    public String getRecipeName() {
        return recipeName;
    }
    
    /** return the servings **/
    public int getServings() {
        return servings;
    }
    
    /** set parameter for servings **/
    public void setServings(int servings) {
        this.servings = servings;
       }
    
    /** return the recipeIngredients **/
    public ArrayList<String> getRecipeIngredients() {
        return recipeIngredients;
    }
    
    /** return the totalRecipeCalories **/
    public void setrecipeIngredients(ArrayList<String> recipeIngredients) {
        this.recipeIngredients = recipeIngredients;
    }
    /**return the totalRecipeCalories**/
    public double getTotalRecipeCalories() {
        return totalRecipeCalories;
    }
    
    /**parameter set to totalRecipeCalories**/
    public void setTotalRecipeCalories(double totalRecipeCalories) {
        this.totalRecipeCalories = totalRecipeCalories;
    }
    
    public SteppingStrone5_Recipe() {
        this.recipeName = "";
        this.servings = servings;
        this.recipeIngredients = new ArrayList<>();
        this.totalRecipeCalories = 0;
    }
    
    public SteppingStone5_Recipe(String recipeName, int servings, 
   ArrayList<String> recipeIngredients, double totalReccipeCalories) {
             this.recipeName = recipeName;
             this.servings = servings;
             this.recipeIngredients = recipeIngredients;
             this.totalRecipeCalories = totalRecipeCalories;
    }
    
    public void printRecipe() {
      double singleServingCalories = totalRecipeCalories / servings;
      System.out.println("Recipe: " + getRecipeName());
      System.out.println("Yield: " + getServings() + "servings");
      System.out.println("Ingredients: ");
      
      for (int 1 = 0; i < recipeIngredients.size(); i++) {
        ingredient currentIngredient = recipeIngredients.get(i);
        String currentIngredientName = currentIngredient.getIngredientName();
            System.out.println(currentIngredientName);
    }
      
      System.out.println("Total Calories per serving: " + singleServingCalories);
      
    }
   }


import java.util.ArrayList;
import java.util.Scanner;

public class SteppingStone5_Recipe {
    
    private String recipeName;
    private int servings;
    private ArrayList<String> recipeIngredients;
    private double totalRecipeCalories;
    
    /**return the recipeName**/
    public void setRecipeName(String recipeName) {
        this.recipeName = recipeName;
    }
    
    /**return the servings**/
    public int getServings() {
        return servings;
    }
    
    /**parameter set servings**/
    public void setServings(int servings) {
        this.servings = servings;
    }
    
    /** return the recipe Ingredients **/
    public ArrayList<String> getRecipeIngredients() {
        return recipeIngredients;
    }
    
    /**parameter to set recipeIngredients**/
    public void setRecipeIngredients(ArrayList<String> recipeIngredients) {
        this.recipeIngredients = recipeIngredients;
    }
    
    /**return the totalRecipeCalories**/
    public double getTotalRecipeCalories() {
        return totalRecipeCalories;
   }
    /**parameter totalRecipeCalories to set totalRecipeCalories**/
    public void setTotalRecipeCalories(double totalRecipeCalories) {
        this.totalRecipeCalories = totalRecipeCalories;
    }
    
    public SteppingStone5_Recipe() {
        this.recipeName = "";
        this.servings = 0;
        this.recipeIngredients = new ArrayList<>();
        this.totalRecipeCalories = 0;
    }
    
    public SteppingStone5_Recipe(String recipeName, int servings, ArrayList<String> 
            recipeIngredients, double totalRecipeCalories) {
        this.recipeName = recipeName; 
        this.servings = servings;
        this.recipeIngredients = recipeIngredients;
        this.totalRecipeCalories = totalRecipeCalories; 
    }
    public void printRecipe() {
        double singleServingCalories = totalRecipeCalories / servings;
        System.out.println("Recipe: " + getRecipeName);
        System.out.println("Yield: " + getServings() + " servings");
        System.out.println("Ingredients: ");
    }
    
}

public class SteppingStone6_RecipeBox {
    private ArrayList<SteppingStone5_Recipe> listOfRecipes; 
    
    /**paramenter args the command line arguments **/
    /** return the listOfRecipes **/
    public ArrayList<SteppingStone5_Recipe> getListOfRecipes() {
        return listOfRecipes;
    }
    
    /** parameter listOfRecipes to set listOfRecipes **/
    public void setListOfRecipes(ArrayList<SteppingStone5_Recipe> listOfRecipes) {
        this.listOfRecipes = listOfRecipes;
    }
    
    public SteppingStone6_RecipeBox() {
        this.listOfRecipes = new ArrayList();
    }
    
    public SteppingStone6_RecipeBox(ArrayList<SteppingStone5_Recipe>listOfRecipes) {
        for (int i = 0; i < listOfRecipes.size(); i++) {
            if
    (listOfRecipes.get(i).getRecipeName().equals(selectedRecipeName)) {
                listOfRecipes.get(i).printRecipe();
            }
        }
    }
    public void addNewRecipe() {
        for (SteppingStone5_Recipe currentRecipe : listOfRecipes) {
            System.out.println(currentRecipe.getRecipeName());
        }
    }
    
    public void addNewRecipe() {
        
        listOfRecipes.add(new SteppingStone5_Recipe().createNewRecipe());
    }
    public static void main(String[] args) {
      SteppingStone6_RecipeBox myRecipeBox = new SteppingStone6_RecipeBox();
      Scanner menuScnr = new Scanner(System.in);
      System.out.println("Menu\n" + "1. Add Recipe\n" + "2. Print All Recipe Details\n"
      + "3. Print All Recipe Names\n" + "\nPlease select menu item: ");
            while (menuScnr.hasNextInt() || menuScnr.hasNextLine()) {
                System.out.println("Menu\n" + "1. Add Recipe\n" +
                        "2. Print All Recipe Details\n" + "3.Print All Recipe Names\n"
                + "\nPlease select a menu item:");
                int input = menuScnr.nextInt();
                if (input == 1) {
                    myRecipeBox.addNewRecipe();
                } else if (input == 2) {
                    System.out.println("Which recipe?\n");
                    String selectedRecipeName = menuScnr.next();
                    myRecipeBox.printAllRecipeDetails(selectedRecipeName);
                } else if (input == 3) {
                    for (int j = 0; j < myRecipeBox.listOfRecipes.size();
                            j++) {
                        
                        System.out.println((j + 1) + ": " + 
                                myRecipeBox.listOfRecipes.get(j).getRecipeName);
                    }
                } else { 
                    System.out.println("\nMenu\n" + "1. Add Recipe\n" + 
                            "2. Print Recipe\n" + "3. Adjust Recipe Servings\n"
                            + "\nPlease select a menu item: ");
                }
               System.out.println("Menu\n" + "1.Add Recipe\n" + 
                       "2. Print All Recipe Detials\n" + "3. Print All Recipe Names\n"
               + "\nPlease select a menu item: ");
            }
    }
}
